networks:
  prod:
    driver: bridge
    name: bklite-prod

volumes:
  redis:
  nats:
  victoria-metrics:
  postgres:
  neo4j:
  victoria-logs:
  falkordb:
  minio:

services:
  traefik:
    image: ${DOCKER_IMAGE_TRAEFIK}
    restart: always
    ports:
      - "${TRAEFIK_WEB_PORT}:${TRAEFIK_WEB_PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../conf/traefik/dynamic.yml:/etc/traefik/dynamic.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--api.dashboard=${TRAEFIK_ENABLE_DASHBOARD}"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--providers.file.watch=true"
      - "--accesslog"
      - "--entrypoints.web.address=:${TRAEFIK_WEB_PORT}"
    networks:
      - prod

  redis:
    image: ${DOCKER_IMAGE_REDIS}
    restart: always
    volumes:
      - redis:/data
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "-p", "6379", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - prod

  nats:
    image: ${DOCKER_IMAGE_NATS}
    restart: always
    volumes:
      - ../conf/nats/nats.conf:/etc/nats/nats.conf:ro
      - ../conf/certs:/etc/nats/certs:ro
      - nats:/nats
    ports:
      - "4222:4222"
    command:
      - "-c"
      - "/etc/nats/nats.conf"
    networks:
      - prod

  victoria-metrics:
    image: ${DOCKER_IMAGE_VICTORIA_METRICS}
    restart: always
    volumes:
      - victoria-metrics:/victoria-metrics-data
    ports:
      - "8428:8428"
    command:
      - "--storageDataPath=/victoria-metrics-data"
      - "--httpListenAddr=0.0.0.0:8428"
      - "--retentionPeriod=168h"
      - "-maxLabelsPerTimeseries=300"
    networks:
      - prod
    depends_on:
      - nats

  postgres:
    container_name: postgres
    image: ${DOCKER_IMAGE_POSTGRES}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ../conf/postgres/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    networks:
      - prod
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
  
  victoria-logs:
    image: ${DOCKER_IMAGE_VICTORIALOGS}
    restart: always
    networks:
      - prod
    volumes:
      - victoria-logs:/vlogs
    ports:
      - "9428:9428"      
    command:
      - -storageDataPath=/vlogs
      - -loggerFormat=json
      - -insert.maxLineSizeBytes=10000000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://victoria-logs:9428/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: ${DOCKER_IMAGE_MINIO}
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    networks:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/ready"]

  mlflow:
    image: ${DOCKER_IMAGE_MLFLOW}
    command:
      - mlflow
      - server
      - --host
      - 0.0.0.0
      - --port
      - "15000"
      - --backend-store-uri
      - postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/mlflow
      - --artifacts-destination
      - s3://mlflow-artifacts/
      - --serve-artifacts
    ports:
      - "15000:15000"
    restart: always   
    networks:
      - prod
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_DEFAULT_REGION=us-east-1
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      postgres: 
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-sSf", "http://mlflow:15000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  nats-executor:
    image: ${DOCKER_IMAGE_NATS_EXECUTOR}
    container_name: nats-executor
    environment:
      - NATS_INSTANCE_ID=default
      - NATS_URLS=tls://$NATS_ADMIN_USERNAME:$NATS_ADMIN_PASSWORD@nats:4222
      - NATS_CA_FILE=/etc/nats/certs/ca.crt
    networks:
      - prod
    restart: always
    volumes:
      - ../conf/nats/certs:/etc/nats/certs:ro

  falkordb:
    image: ${DOCKER_IMAGE_FALKORDB}
    restart: always
    environment:
      - REDIS_ARGS=--requirepass ${FALKORDB_PASSWORD}
      - FALKORDB_ARGS=THREAD_COUNT 4
    ports:
      - "6479:6479"      
    networks:
      - prod
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "-p", "6379", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - falkordb:/var/lib/falkordb/data