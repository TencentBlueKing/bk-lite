{
  "extends": [
    "next",
    "plugin:@typescript-eslint/recommended",
    "plugin:storybook/recommended"
  ],
  "rules": {
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "interface"
    ],
    "@typescript-eslint/no-var-requires": "off",
    "no-console": "off",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": true,
        "offsetTernaryExpressions": false,
        "ignoredNodes": [
          "PropertyDefinition[decorators]",
          "TSUnionType",
          "TSIntersectionType",
          "TSTypeParameterInstantiation",
          "FunctionExpression[params]:has(Identifier[decorators])",
          "FunctionExpression > .params[decorators.length > 0]",
          "FunctionExpression > .params > :matches(Decorator, :not(:first-child))",
          "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key",
          "VariableDeclarator > ArrowFunctionExpression > BlockStatement",
          "VariableDeclarator > ArrowFunctionExpression > CallExpression",
          "CallExpression > ArrowFunctionExpression[body.type='BlockStatement']",
          "CallExpression > FunctionExpression[body.type='BlockStatement']",
          "JSXElement",
          "JSXFragment",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXAttribute",
          "JSXSpreadAttribute",
          "JSXText",
          "JSXExpressionContainer",
          "TemplateLiteral"
        ]
      }
    ],
    "react-hooks/exhaustive-deps": "off",
    "react/display-name": "warn",
    "@next/next/no-img-element": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-unused-expressions": ["error", { "allowShortCircuit": true }]
  },
  "plugins": [
    "@typescript-eslint"
  ]
}
