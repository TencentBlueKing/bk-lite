{
  "knowledge": {
    "menu": "Knowledge",
    "add": "Add New Knowledge",
    "edit": "Edit Knowledge",
    "source": "Source",
    "config": "Config",
    "choose": "Choose",
    "preprocess": "Preprocess",
    "finish": "Finish",
    "finishTip": "All files uploaded will be added to the training queue. Please check the training progress on the left side",
    "backToList": "Back to List",
    "or": "or",
    "goToTesting": "Go to Testing",
    "form": {
      "name": "Name",
      "group": "Group",
      "introduction": "Introduction",
      "embedModel": "Embed Model",
      "embedModelTip": "The embedding model transforms complex vocabulary or data into simple numerical vectors, making it easier for computers to understand the meaning of language and improving the performance of machine learning models.",
      "content": "Content",
      "owner": "Owner"
    },
    "deleteConfirm": "Are you sure you want to delete this knowledge?",
    "localFile": "Local File",
    "fileSubTitle": "Upload local files (such as PDF, DOCX, TXT) as a knowledge source.",
    "webLink": "Web Link",
    "linkSubTitle": "Use web links as a knowledgwe source.",
    "cusText": "Custom Text",
    "cusTextSubTitle": "Enter custom text as a knowledge source.",
    "applyConfig": "Apply Config",
    "ranking": "Ranking",
    "score": "Score",
    "results": "Results",
    "returnQuanityTip": "Please input Candidate Quantity must be greater than Return Quantity",
    "testingSuccess": "Testing completed successfully!",
    "testingFailed": "Failed to complete testing.",
    "applyFailed": "Failed to apply configuration.",
    "embeddingModelTip": "After switching the embedding model, it is necessary to retrain the knowledge base documents. Please check the training status in the knowledge base details.",
    "embeddingModel": "Embedding Model",
    "retrievalSetting": "Retrieval Setting",
    "weight": "Weight",
    "pattern": "pattern",
    "match": "match",
    "matchPhrase": "match_phrase",
    "textSearch": "Text Search",
    "textSearchDesc": "Based on keyword search technology, it searches and extracts relevant documents from large volumes of text data.",
    "vectorSearch": "Vector Search",
    "vectorSearchDesc": "Utilizing vector space models, it finds the best-matching data by calculating the similarity between vectors in high-dimensional space.",
    "returnQuantity": "Return Quantity",
    "candidateQuantity": "Candidate Quantity",
    "rerankSettings": "Reorder Settings",
    "rerankModel": "Rerank Model",
    "rerankModelDesc": "After the initial generation of search results, specific algorithms are used to reorder the results to enhance their relevance.",
    "rerankChunkCount": "Rerank Chunk Count",
    "chunkCount": "Chunk Count",
    "chunkCountTip": "The number of chunks returned by the retrieval, indicating the upper limit on the number of chunks returned after each search.",
    "extract": "Extract",
    "documents": {
      "title": "Documents",
      "description": "Document management is used for adding new knowledge, including local file, web links, or custom text. The newly added knowledge can be segmented to facilitate its use by bots.",
      "batchSet": "Batch Set",
      "name": "NAME",
      "chunkSize": "CHUNK COUNT",
      "createdAt": "CREATED TIME",
      "createdBy": "CREATED",
      "actions": "ACTIONS",
      "status": "STATUS",
      "chunkingMethod": "CHUNKING METHOD",
      "extractionMethod": "EXTRACTION METHOD",
      "preview": "Preview",
      "viewChunk": "View Chunk",
      "characters": "Characters",
      "link": "Link",
      "deep": "Deep",
      "deepTip": "When retrieving website content, depth determines the hierarchical level of links to be crawled, specifying how many levels of links can be followed from the starting page.",
      "webLinkSaveSuccess": "Web link data saved successfully",
      "webLinkSaveFailed": "Please correct the errors in the form or failed to save web link data",
      "fileUploadSuccess": "Files uploaded successfully",
      "fileUploadFailed": "Failed to upload files",
      "manualDataSaveSuccess": "Manual data saved successfully",
      "manualDataSaveFailed": "Failed to save manual data",
      "selectSemanticModel": "Please select a semantic model when Semantic Chunk Parsing is enabled.",
      "selectOcrModel": "Please select an OCR model when OCR Enhancement is enabled.",
      "configSaved": "Configuration saved and preprocessing started",
      "preprocessFailed": "Failed to start preprocessing",
      "extractMethod": "Extraction Method",
      "config": "Configuration",
      "selectExtractionMethod": "Select Extraction Method",
      "fullTextExtraction": "Full Text Extraction",
      "fullTextFormats": "PDF, Markdown (.md), TXT (.txt), etc.",
      "fullTextMethod": "Extract all text content directly, enabling OCR for scanned PDFs.",
      "fullTextDescription": "Preserves original text format and paragraph structure, ensuring complete content coverage (OCR for PDFs, direct extraction for MD/TXT).",
      "chapterExtraction": "Chapter Extraction",
      "chapterFormats": "Word (.doc), etc.",
      "chapterMethod": "Extract based on heading levels (e.g., H1/H2/H3) or chapter delimiters.",
      "chapterDescription": "Uses document structure (e.g., headings, section breaks) to extract content, maintaining chapter logic, suitable for technical documents, theses, etc.",
      "pageExtraction": "Page Extraction",
      "pageFormats": "PPT, etc.",
      "pageMethod": "Split by slide pages, treating each page as an independent unit.",
      "pageDescription": "Preserves the independence of each slide's content and visuals, suitable for presentations with page logic.",
      "worksheetExtraction": "Worksheet Extraction",
      "worksheetFormats": "Excel (.xlsx/.csv), etc.",
      "worksheetMethod": "Extract each worksheet (Sheet) as an independent unit.",
      "worksheetDescription": "Preserves table structure and data (e.g., formulas, merged cells), suitable for scenarios requiring complete table information.",
      "rowExtraction": "Row-Level Extraction",
      "rowFormats": "Excel (.xlsx/.csv), etc.",
      "rowMethod": "Extract headers and row data, converting to structured data format.",
      "rowDescription": "Generates header fields and row records, suitable for data cleaning, analysis, or machine learning needs.",
      "ocrEnhancement": "OCR Enhancement",
      "ocrEnhancementDesc": "OCR (Optical Character Recognition) technology is used to recognize and convert characters in images into editable text, improving the accuracy and effectiveness of text recognition.",
      "extractionDescription": "Extraction Description",
      "descriptionTitle": "Description",
      "formats": "Formats",
      "method": "Method",
      "introduction": "Introduction",
      "example": "Example",
      "fixedChunk": "Fixed Chunk",
      "fixedChunkDesc": "Split the document into fixed-size chunks.",
      "overlapChunk": "Overlap Chunk",
      "overlapChunkDesc": "Split the document into chunks with overlapping content.",
      "semanticChunk": "Semantic Chunk",
      "semanticChunkDesc": "Split the document based on semantic meaning.",
      "noChunk": "No Chunk",
      "noChunkDesc": "Do not split the document into chunks.",
      "chunkParams": "Chunk Parameters",
      "chunkSizeLabel": "Chunk Size",
      "chunkOverlap": "Chunk Overlap",
      "chunkIllustration": "Chunk Illustration",
      "fixedIllustration": "Illustration for fixed chunking.",
      "overlapIllustration": "Illustration for overlapping chunking.",
      "semanticIllustration": "Illustration for semantic chunking.",
      "noneIllustration": "No chunking illustration.",
      "fixedFormats": "Text files (TXT), PPT, PDF, Excel, etc.",
      "fixedMethod": "Split content by a preset fixed length, such as 256 characters per chunk.",
      "fixedDescription": "Clear rules and efficient processing, suitable for quick batch data processing. However, it may cause semantic breaks due to mechanical splitting (e.g., truncating sentences or tables), requiring a balance between efficiency and content integrity.",
      "overlapFormats": "Long texts (PDF, TXT).",
      "overlapMethod": "Based on fixed-length chunking, set overlapping content between chunks (e.g., 30 characters repeated) to retain contextual associations through a sliding window.",
      "overlapDescription": "Reduces semantic breaks through overlap, suitable for tasks requiring continuous context (e.g., text analysis), but may lead to storage redundancy due to repeated content.",
      "semanticFormats": "Structured documents (Word, Markdown), technical documents (PDF with table of contents).",
      "semanticMethod": "Split based on content logic, using algorithms to understand semantics and identify different paragraphs or topics.",
      "semanticDescription": "Retains complete semantic units (e.g., chapters, paragraphs, function modules), suitable for long text processing requiring logical associations, but highly dependent on document structure or algorithms.",
      "noneFormats": "Short texts (emails, summaries), small files (single-page PPT, simple tables, short TXT).",
      "noneMethod": "Process the entire text without any splitting.",
      "noneDescription": "Retains the global association of the entire document, suitable for scenarios requiring overall understanding (e.g., summary generation, full-text retrieval). However, it requires high computational resources and has low efficiency in processing long texts."
    },
    "testing": {
      "title": "Testing",
      "description": "Test the knowledge base recall effectiveness based on the given query text.",
      "text": "Text",
      "config": "Config"
    },
    "settings": {
      "title": "Settings",
      "description": "Here you can modify the properties and working methods of the Knowledge."
    }
  },
  "skill": {
    "menu": "Skill",
    "add": "Add New Skill",
    "edit": "Edit Skill",
    "createBlankAgent": "Create Blank Agent",
    "createFromTemplate": "Create From Template",
    "information": "Information",
    "form": {
      "name": "Name",
      "group": "Group",
      "introduction": "Introduction",
      "owner": "Owner",
      "llmModel": "LLM Model",
      "showThought": "Show Thought",
      "temperature": "Temperature",
      "temperatureTip": "Used to control the randomness and creativity of text generation; a low temperature produces more definitive results, while a high temperature increases the diversity and randomness of the text.",
      "prompt": "Prompt",
      "promptTip": "You can input relevant prompts to guide the model in generating specific responses by providing context or questions to adjust the direction and quality of the output content.",
      "qaType": "Knowledge Q&A",
      "qaTypeDesc": "With simple configuration, you can generate a chat-based intelligent agent based on the LLM large model. This agent can reference private domain knowledge and is suitable for pure Q&A scenarios.",
      "toolsType": "Basic Tool",
      "toolsTypeDesc": "An intelligent agent with reasoning and tool invocation capabilities. This agent can reference private domain knowledge and flexibly choose execution tools, making it suitable for more complex intelligent scenarios."
    },
    "useTemp": "Use This Template",
    "chatEnhancement": "Chat Enhancement",
    "chatHistory": "Chat History",
    "chatHistoryTip": "The chat history count refers to the total number of interaction turns or messages between the user and the robot. This count can help the robot understand the context and enhance the relevance and coherence of its responses.",
    "quantity": "Quantity",
    "source": "Source",
    "rag": "RAG",
    "ragTip": "RAG is an architecture that combines information retrieval with generation models, first retrieving relevant information from a knowledge base and then using the generation model to produce contextually relevant responses.",
    "ragSource": "RAG Source",
    "knowledgeBase": "Knowledge Base",
    "knowledgeBaseTip": "The knowledge base is used as a source of knowledge for the skill. The threshold usually indicates the relevance requirement of the matching answer in the knowledge base, with a higher value indicating that the matching result needs to be more relevant to the user question. Only highly relevant answers will be selected as sources.",
    "selectKnowledgeBase": "Select KnowledgeBase",
    "selectedCount": "Selected Count",
    "deleteConfirm": "Are you sure you want to delete this skill?",
    "tool": "Tool",
    "toolTip": "The tool is used to provide the skill with the ability to obtain external data or perform operations. The specific tool to be called is determined autonomously by the large model.",
    "selecteTool": "Selecte Tool",
    "settings": {
      "menu": "Setting",
      "title": "LLM Skill",
      "description": "LLM skills include the selection of LLM models and knowledge bases to optimize language understanding and generation processes. Users can also enable RAG (Retrieval-Augmented Generation) and conversation enhancement features to improve dialogue quality and accuracy.",
      "noKnowledgeBase": "No knowledge base has been set up yet.",
      "toConfigureKnowledgeBase": " to configure the knowledge base.",
      "clickHere": "click here"
    },
    "rules": {
      "menu": "Rules",
      "table": {
        "name": "NAME",
        "createdAt": "CREATED TIME",
        "creator": "CREATED",
        "state": "STATE",
        "actions": "ACTIONS"
      },
      "add": "Add Rule",
      "edit": "Edit Rule",
      "name": "Name",
      "description": "Description",
      "condition": "Condition",
      "action": "Action",
      "addCondition": "Add Condition",
      "questioner": "Questioner",
      "operator": "Operator",
      "type": "Type",
      "value": "Value",
      "prompt": "Prompt",
      "knowledgeBase": "Knowledge Base",
      "deleteConfirm": "Are you sure you want to delete this rule?"
    },
    "invocationLogs": {
      "table": {
        "time": "TIME",
        "clientIp": "CLIENT IP",
        "state": "STATE",
        "userMessage": "USER MESSAGE"
      },
      "detail": "DETAIL",
      "apiDetail": "API Invocation Detail",
      "requestInfo": "Request Information",
      "responseInfo": "Response Information",
      "success": "Success",
      "failure": "Failure",
      "copied": "Copied to clipboard",
      "copyFailed": "Could not copy message"
    }
  },
  "tool": {
    "name": "Name",
    "label": "Label",
    "description": "Description",
    "mcpUrl": "URL",
    "general": "General",
    "search": "Search",
    "maintenance": "Maintenance",
    "media": "Media",
    "collaboration": "Collaboration",
    "title": "Tool",
    "other": "Other",
    "addTool": "Add Tool",
    "deleteConfirm": "Are you sure you want to delete this tool?"
  },
  "provider": {
    "menu": "Provider",
    "setting": "Model Setting",
    "form": {
      "key": "API Key",
      "url": "URL",
      "enabled": "Enabled",
      "name": "Name",
      "modelName": "Model Name",
      "type": "Type",
      "group": "Group",
      "consumerTeam": "Consumer Team"
    },
    "deleteConfirm": "Are you sure you want to delete this model?"
  },
  "studio": {
    "menu": "Studio",
    "deleteConfirm": "Are you sure you want to delete this studio?",
    "offDeleteConfirm": "Please go offline before deleting the bot.",
    "offAndDel": "Offline & Delete",
    "add": "Add New Studio",
    "edit": "Edit Studio",
    "information": "Information",
    "form": {
      "name": "Name",
      "group": "Group",
      "introduction": "Introduction",
      "owner": "Owner",
      "model": "Model",
      "modelTip": "Please select the Rasa small model to be used by this application for filtering and closing simple questions, reducing API calls and token consumption of the large model.",
      "replicaCount": "Replica Count",
      "replicaCountTip": "The number of Pilot instances running the AI application. Increasing the number of instances enhances the fault tolerance and availability of the application. The default is 1."
    },
    "off": "Offline",
    "on": "Online",
    "settings": {
      "title": "Settings",
      "selectSkills": "Select Skills",
      "selectChannels": "Select Channels",
      "noChannelHasBeenOpened": "No channel has been opened yet.",
      "clickHere": "Click here ",
      "toConfigureChannels": "to configure channels",
      "noSkillHasBeenSelected": "No skill has been selected yet.",
      "toConfigureSkills": "to add skills",
      "domain": "Domain",
      "enableSsl": "enable SSL",
      "portMapping": "Port Mapping",
      "description": "Select the corresponding skills for the bot, configure the relevant information, and then publish.",
      "publishTip": "After the robot is published, it will be updated on the selected channels.",
      "selectedParams": "Please ensure that the selected channels parameters are configured."
    },
    "channel": {
      "title": "Channel",
      "setting": "Setting",
      "description": "Built-in with multiple messaging channels, allowing the bot to interact with users through these channels."
    },
    "logs": {
      "title": "Conversation Logs",
      "description": "You can view the log records of the conversation between the user and the robot, and restore the conversation scene.",
      "table": {
        "title": "TITLE",
        "createdTime": "CREATED TIME",
        "updatedTime": "UPDATED TIME",
        "user": "USER",
        "channel": "CHANNEL",
        "count": "COUNT",
        "actions": "ACTIONS",
        "detail": "DETAIL"
      },
      "searchUser": "Please enter the user name to search...",
      "records": "Record(s)"
    },
    "statistics": {
      "title": "Statistics",
      "description": "The operational statistics of the Bot are used to analyze the usage and invocation of the robot by users.",
      "last7Days": "Last 7 Days",
      "totalConsumption": "Total Token Consumption",
      "totalConsumptionDesc": "This reports the total amount of Token consumed within the selected time range.",
      "totalConsumptionOverview": "Token Consumption Overview",
      "totalConsumptionOverviewDesc": "This provides statistics on the time distribution of Token consumption within the selected time range.",
      "totalConversation": "Total Conversation",
      "totalConversationDesc": "This counts the total number of conversations by all users of the Bot within the selected time range. Each question and answer counts as one conversation round, and Bot testing questions and answers are not included in the statistics.",
      "totalActiveUser": "Total Active User",
      "totalActiveUserDesc": "This counts the number of distinct users who engaged in conversations with the Bot within the selected time range."
    }
  },
  "chat": {
    "test": "Test",
    "sendFailed": "Failed to send message",
    "copied": "Copied to clipboard",
    "copyFailed": "Could not copy message",
    "regenerateFailed": "Failed to regenerate message",
    "clickCancel": "Click to cancel",
    "send": "Send",
    "inputMessage": "Please enter a message",
    "clearConfirm": "You are about to clear the conversation. After clearing, you will not be able to retrieve it. Do you want to clear the current conversation?",
    "clear": "Clear Conversation",
    "inputPlaceholder": "Please enter a message...",
    "regenerate": "Regenerate",
    "copy": "Copy",
    "mark": "Mark",
    "more": "More",
    "annotationSaved": "Annotation saved successfully",
    "annotationFailed": "Failed to save annotation",
    "annotationRemoved": "Annotation removed successfully",
    "annotationRemoveFailed": "Failed to remove annotation",
    "editAnnotation": "Edit Annotation",
    "removeAnnotation": "Remove Annotation",
    "addAnnotation": "Add Annotation",
    "question": "Question",
    "answer": "Answer",
    "saveToKnowledgeBase": "Save to Knowledge Base",
    "removeAnnotationConfirm": "Are you sure you want to remove this annotation?",
    "noKnowledge": "No knowledge available.",
    "knowledgeDetails": "Knowledge Details"
  },
  "settings": {
    "menu": "Settings",
    "manageQuota": {
      "title": "Manage Quota",
      "content": "The administrator can set different quotas for different roles.",
      "name": "NAME",
      "knowledgeBase": "KNOWLEDGE BASE",
      "skill": "SKILL",
      "bot": "BOT",
      "form": {
        "add": "Add Quota",
        "edit": "Edit Quota",
        "name": "Name",
        "target": "Target",
        "rule": "Rule",
        "knowledgeBase": "Knowledge Bases",
        "skill": "Skills",
        "bot": "Bots",
        "shared": "Shared Quota",
        "sharedTooltip": "Quota shared among individuals in the organization.",
        "uniform": "Uniform Quota",
        "uniformTooltip": "Quota uniformly applied to each individual in the organization.",
        "token": "Token Count",
        "thousand": "Thousand",
        "million": "Million"
      }
    },
    "myQuota": {
      "title": "My Quota",
      "content": "Show my total quota usage. Please contact the administrator to apply for an increase when the quota is insufficient.",
      "usage": "Quota Usage",
      "knowledgeBase": "Knowledge Base",
      "skills": "Skills",
      "bots": "Bots",
      "shared": "Shared Quota",
      "uniform": "Uniform Quota"
    },
    "secret": {
      "key": "Secret Key",
      "createdAt": "Created",
      "title": "API Secret Keys",
      "content": "To prevent API abuse, protect your API Key.",
      "create": "Create new Secret key",
      "selectGroup": "Select Group",
      "group": "Group",
      "copied": "Copied to clipboard",
      "deleteConfirm": "Are you sure you want to delete this secret key?"
    }
  }
}
