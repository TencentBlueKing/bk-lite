# Generated by Django 4.2.22 on 2025-10-09 03:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='告警ID')),
                ('source_id', models.CharField(db_index=True, max_length=100, verbose_name='资源ID')),
                ('level', models.CharField(db_index=True, default='', max_length=20, verbose_name='最高告警级别')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='最高告警值')),
                ('content', models.TextField(blank=True, verbose_name='告警内容')),
                ('status', models.CharField(db_index=True, default='new', max_length=20, verbose_name='告警状态')),
                ('start_event_time', models.DateTimeField(blank=True, null=True, verbose_name='开始事件时间')),
                ('end_event_time', models.DateTimeField(blank=True, null=True, verbose_name='结束事件时间')),
                ('operator', models.CharField(blank=True, max_length=50, null=True, verbose_name='告警处理人')),
                ('info_event_count', models.IntegerField(default=0, verbose_name='正常事件计数')),
                ('notice', models.BooleanField(default=False, verbose_name='是否已通知')),
            ],
            options={
                'verbose_name': '告警记录',
                'verbose_name_plural': '告警记录',
            },
        ),
        migrations.CreateModel(
            name='CollectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='采集方式')),
                ('collector', models.CharField(max_length=100, verbose_name='采集器')),
                ('icon', models.CharField(max_length=100, verbose_name='图标')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('default_query', models.TextField(blank=True, verbose_name='默认查询语句')),
                ('attrs', models.JSONField(default=list, verbose_name='属性列表')),
            ],
            options={
                'verbose_name': '采集方式',
                'verbose_name_plural': '采集方式',
                'unique_together': {('name', 'collector')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='事件ID')),
                ('source_id', models.CharField(db_index=True, max_length=100, verbose_name='资源ID')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='事件发生时间')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='事件值')),
                ('level', models.CharField(max_length=20, verbose_name='事件级别')),
                ('content', models.TextField(blank=True, verbose_name='事件内容')),
                ('notice_result', models.JSONField(default=list, verbose_name='通知结果')),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.alert', verbose_name='关联告警')),
            ],
            options={
                'verbose_name': '事件记录',
                'verbose_name_plural': '事件记录',
            },
        ),
        migrations.CreateModel(
            name='LogGroup',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='日志分组ID')),
                ('name', models.CharField(max_length=200, verbose_name='日志分组名称')),
                ('rule', models.JSONField(default=dict, verbose_name='规则')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '日志分组',
                'verbose_name_plural': '日志分组',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=255, verbose_name='策略名称')),
                ('last_run_time', models.DateTimeField(blank=True, null=True, verbose_name='最后一次执行时间')),
                ('log_groups', models.JSONField(default=list, help_text='策略监控的日志分组ID列表', verbose_name='日志分组范围')),
                ('alert_type', models.CharField(max_length=50, verbose_name='告警类型')),
                ('alert_name', models.CharField(max_length=255, verbose_name='告警名称')),
                ('alert_level', models.CharField(max_length=30, verbose_name='告警等级')),
                ('alert_condition', models.JSONField(default=dict, verbose_name='告警条件')),
                ('schedule', models.JSONField(default=dict, verbose_name='策略执行周期, eg: 1h执行一次, 5m执行一次')),
                ('period', models.JSONField(default=dict, verbose_name='每次监控检测的数据周期,eg: 1h内, 5m内')),
                ('show_fields', models.JSONField(default=list, verbose_name='展示字段')),
                ('notice', models.BooleanField(default=True, verbose_name='是否通知')),
                ('notice_type', models.CharField(default='', max_length=50, verbose_name='通知方式')),
                ('notice_type_id', models.IntegerField(default=0, verbose_name='通知方式ID')),
                ('notice_users', models.JSONField(default=list, verbose_name='通知人')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('collect_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.collecttype', verbose_name='采集方式')),
            ],
            options={
                'verbose_name': '告警策略',
                'verbose_name_plural': '告警策略',
                'unique_together': {('name', 'collect_type')},
            },
        ),
        migrations.CreateModel(
            name='SearchCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=200, verbose_name='搜索条件名称')),
                ('condition', models.JSONField(default=dict, verbose_name='搜索条件配置')),
                ('organization', models.IntegerField(verbose_name='组织ID')),
            ],
            options={
                'verbose_name': '搜索条件',
                'verbose_name_plural': '搜索条件',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventRawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=list, verbose_name='原始数据')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.event', verbose_name='事件')),
            ],
            options={
                'verbose_name': '事件原始数据',
                'verbose_name_plural': '事件原始数据',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.policy', verbose_name='关联策略'),
        ),
        migrations.CreateModel(
            name='CollectInstance',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='采集方式实例ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='采集方式实例名称')),
                ('node_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Node ID')),
                ('collect_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.collecttype', verbose_name='采集方式')),
            ],
            options={
                'verbose_name': '采集方式实例',
                'verbose_name_plural': '采集方式实例',
            },
        ),
        migrations.CreateModel(
            name='CollectConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='配置ID')),
                ('file_type', models.CharField(max_length=50, verbose_name='文件类型')),
                ('is_child', models.BooleanField(default=False, verbose_name='是否子配置')),
                ('collect_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.collectinstance', verbose_name='采集方式实例')),
            ],
            options={
                'verbose_name': '采集配置',
                'verbose_name_plural': '采集配置',
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='collect_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.collecttype', verbose_name='采集方式'),
        ),
        migrations.AddField(
            model_name='alert',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.policy', verbose_name='关联策略'),
        ),
        migrations.CreateModel(
            name='PolicyOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('organization', models.IntegerField(verbose_name='组织id')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.policy', verbose_name='监控策略')),
            ],
            options={
                'verbose_name': '策略组织',
                'verbose_name_plural': '策略组织',
                'unique_together': {('policy', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='LogGroupOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('organization', models.IntegerField(verbose_name='组织ID')),
                ('log_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.loggroup', verbose_name='日志分组')),
            ],
            options={
                'verbose_name': '日志分组组织',
                'verbose_name_plural': '日志分组组织',
                'unique_together': {('log_group', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='CollectInstanceOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('organization', models.IntegerField(verbose_name='组织ID')),
                ('collect_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.collectinstance', verbose_name='监控对象实例')),
            ],
            options={
                'verbose_name': '采集方式实例组织',
                'verbose_name_plural': '采集方式实例组织',
                'unique_together': {('collect_instance', 'organization')},
            },
        ),
    ]
