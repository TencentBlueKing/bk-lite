# Generated by Django 4.2.22 on 2025-10-09 03:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollectConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='配置ID')),
                ('collector', models.CharField(max_length=100, verbose_name='采集器名称')),
                ('collect_type', models.CharField(max_length=50, verbose_name='采集类型')),
                ('config_type', models.CharField(max_length=50, verbose_name='配置类型')),
                ('file_type', models.CharField(max_length=50, verbose_name='文件类型')),
                ('is_child', models.BooleanField(default=True, verbose_name='是否子配置')),
            ],
            options={
                'verbose_name': '采集配置',
                'verbose_name_plural': '采集配置',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='指标名称')),
                ('display_name', models.CharField(default='', max_length=100, verbose_name='指标展示名称')),
                ('query', models.TextField(default='', verbose_name='查询语句')),
                ('unit', models.TextField(default='', verbose_name='指标单位')),
                ('data_type', models.CharField(default='', max_length=50, verbose_name='数据类型')),
                ('description', models.TextField(blank=True, null=True, verbose_name='指标描述')),
                ('dimensions', models.JSONField(default=list, verbose_name='维度')),
                ('instance_id_keys', models.JSONField(default=list, verbose_name='实例ID键(由指标维度组成)')),
                ('is_pre', models.BooleanField(default=True, verbose_name='是否预定义')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
            ],
            options={
                'verbose_name': '指标',
                'verbose_name_plural': '指标',
            },
        ),
        migrations.CreateModel(
            name='MetricGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='指标分组名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='指标分组描述')),
                ('is_pre', models.BooleanField(default=True, verbose_name='是否预定义')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
            ],
            options={
                'verbose_name': '指标分组',
                'verbose_name_plural': '指标分组',
            },
        ),
        migrations.CreateModel(
            name='MonitorAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('policy_id', models.IntegerField(db_index=True, default=0, verbose_name='监控策略ID')),
                ('monitor_instance_id', models.CharField(db_index=True, default='', max_length=100, verbose_name='监控对象实例ID')),
                ('monitor_instance_name', models.CharField(default='', max_length=100, verbose_name='监控对象实例名称')),
                ('alert_type', models.CharField(choices=[('alert', 'Alert'), ('no_data', 'No Data')], db_index=True, default='alert', max_length=50, verbose_name='告警类型')),
                ('level', models.CharField(db_index=True, default='', max_length=20, verbose_name='最高告警级别')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='最高告警值')),
                ('content', models.TextField(blank=True, verbose_name='告警内容')),
                ('status', models.CharField(choices=[('new', 'New'), ('closed', 'Closed'), ('recovered', 'Recovered')], db_index=True, default='new', max_length=20, verbose_name='告警状态')),
                ('start_event_time', models.DateTimeField(blank=True, null=True, verbose_name='开始事件时间')),
                ('end_event_time', models.DateTimeField(blank=True, null=True, verbose_name='结束事件时间')),
                ('operator', models.CharField(blank=True, max_length=50, null=True, verbose_name='告警处理人')),
                ('info_event_count', models.IntegerField(default=0, verbose_name='信息事件数量')),
            ],
            options={
                'verbose_name': '监控告警',
                'verbose_name_plural': '监控告警',
            },
        ),
        migrations.CreateModel(
            name='MonitorAlertMetricSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('policy_id', models.IntegerField(db_index=True, verbose_name='监控策略ID')),
                ('monitor_instance_id', models.CharField(db_index=True, max_length=100, verbose_name='监控对象实例ID')),
                ('snapshot_time', models.DateTimeField(db_index=True, verbose_name='快照时间')),
                ('raw_data', models.JSONField(default=list, verbose_name='原始指标数据')),
            ],
            options={
                'verbose_name': '告警指标快照',
                'verbose_name_plural': '告警指标快照',
            },
        ),
        migrations.CreateModel(
            name='MonitorEvent',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='事件ID')),
                ('policy_id', models.IntegerField(db_index=True, verbose_name='监控策略ID')),
                ('monitor_instance_id', models.CharField(db_index=True, max_length=100, verbose_name='监控对象实例ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='事件生成时间')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='事件发生时间')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='事件值')),
                ('level', models.CharField(choices=[('no_data', 'No Data'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20, verbose_name='事件级别')),
                ('content', models.TextField(blank=True, verbose_name='事件内容')),
                ('notice_result', models.JSONField(default=list, verbose_name='通知结果')),
            ],
        ),
        migrations.CreateModel(
            name='MonitorInstance',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='监控对象实例ID')),
                ('name', models.CharField(db_index=True, default='', max_length=200, verbose_name='监控对象实例名称')),
                ('interval', models.IntegerField(default=10, verbose_name='监控实例采集间隔(s)')),
                ('auto', models.BooleanField(default=False, verbose_name='是否自动发现')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='是否删除')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '监控对象实例',
                'verbose_name_plural': '监控对象实例',
            },
        ),
        migrations.CreateModel(
            name='MonitorObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='监控对象')),
                ('icon', models.CharField(default='', max_length=100, verbose_name='监控对象图标')),
                ('type', models.CharField(max_length=50, verbose_name='监控对象类型')),
                ('level', models.CharField(default='base', max_length=50, verbose_name='监控对象级别')),
                ('description', models.TextField(blank=True, verbose_name='监控对象描述')),
                ('default_metric', models.TextField(blank=True, verbose_name='默认指标')),
                ('instance_id_keys', models.JSONField(default=list, verbose_name='联合唯一实例ID键列表')),
                ('supplementary_indicators', models.JSONField(default=list, verbose_name='对象实例补充指标')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='monitor.monitorobject', verbose_name='父级监控对象')),
            ],
            options={
                'verbose_name': '监控对象',
                'verbose_name_plural': '监控对象',
            },
        ),
        migrations.CreateModel(
            name='MonitorPlugin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='插件名称')),
                ('description', models.TextField(blank=True, verbose_name='插件描述')),
                ('monitor_object', models.ManyToManyField(to='monitor.monitorobject', verbose_name='监控对象')),
            ],
            options={
                'verbose_name': '监控插件',
                'verbose_name_plural': '监控插件',
            },
        ),
        migrations.CreateModel(
            name='MonitorPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='监控策略名称')),
                ('organizations', models.JSONField(default=list, verbose_name='策略所属组织')),
                ('alert_name', models.CharField(default='', max_length=200, verbose_name='告警名称')),
                ('collect_type', models.CharField(default='', max_length=50, verbose_name='采集类型')),
                ('query_condition', models.JSONField(default=dict, verbose_name='查询条件')),
                ('source', models.JSONField(default=dict, verbose_name='策略适用的资源')),
                ('schedule', models.JSONField(default=dict, verbose_name='策略执行周期, eg: 1h执行一次, 5m执行一次')),
                ('period', models.JSONField(default=dict, verbose_name='每次监控检测的数据周期,eg: 1h内, 5m内')),
                ('algorithm', models.CharField(max_length=50, verbose_name='聚合算法')),
                ('group_by', models.JSONField(default=list, verbose_name='分组字段')),
                ('threshold', models.JSONField(default=list, verbose_name='阈值')),
                ('recovery_condition', models.SmallIntegerField(default=1, verbose_name='多少周期不满足阈值自动恢复')),
                ('no_data_period', models.JSONField(default=dict, verbose_name='无数据告警的数据周期（eg:10m内无数据）')),
                ('no_data_level', models.CharField(default='', max_length=20, verbose_name='无数据告警级别')),
                ('no_data_recovery_period', models.JSONField(default=dict, verbose_name='无数据告警恢复的数据周期（eg:10m内有数据）')),
                ('notice', models.BooleanField(default=True, verbose_name='是否通知')),
                ('notice_type', models.CharField(default='', max_length=50, verbose_name='通知方式')),
                ('notice_type_id', models.IntegerField(default=0, verbose_name='通知方式ID')),
                ('notice_users', models.JSONField(default=list, verbose_name='通知人')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('enable_alerts', models.JSONField(default=list, verbose_name='启用的告警类型')),
                ('last_run_time', models.DateTimeField(blank=True, null=True, verbose_name='最后一次执行时间')),
                ('monitor_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='监控对象')),
            ],
            options={
                'verbose_name': '监控策略',
                'verbose_name_plural': '监控策略',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='设置名称')),
                ('value', models.JSONField(default=dict, verbose_name='设置值')),
            ],
            options={
                'verbose_name': '设置',
                'verbose_name_plural': '设置',
            },
        ),
        migrations.CreateModel(
            name='PolicyTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templates', models.JSONField(default=list, verbose_name='策略模板列表')),
                ('monitor_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='监控对象')),
                ('plugin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorplugin', verbose_name='监控插件')),
            ],
            options={
                'verbose_name': '监控策略模板',
                'verbose_name_plural': '监控策略模板',
            },
        ),
        migrations.CreateModel(
            name='PolicyOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('organization', models.IntegerField(verbose_name='组织id')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorpolicy', verbose_name='监控策略')),
            ],
            options={
                'verbose_name': '监控策略组织',
                'verbose_name_plural': '监控策略组织',
            },
        ),
        migrations.CreateModel(
            name='MonitorObjectOrganizationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('name', models.CharField(max_length=100, verbose_name='分组规则名称')),
                ('organizations', models.JSONField(default=list, verbose_name='所属组织')),
                ('rule', models.JSONField(default=dict, verbose_name='分组规则详情')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('monitor_instance_id', models.CharField(db_index=True, default='', max_length=200, verbose_name='关联监控对象实例ID')),
                ('monitor_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='监控对象')),
            ],
            options={
                'verbose_name': 'Time Fields',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitorInstanceOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('created_by', models.CharField(default='', max_length=32, verbose_name='Creator')),
                ('updated_by', models.CharField(default='', max_length=32, verbose_name='Updater')),
                ('domain', models.CharField(default='domain.com', max_length=100, verbose_name='Domain')),
                ('updated_by_domain', models.CharField(default='domain.com', max_length=100, verbose_name='updated by domain')),
                ('organization', models.IntegerField(verbose_name='组织id')),
                ('monitor_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorinstance', verbose_name='监控对象实例')),
            ],
            options={
                'verbose_name': '监控对象实例组织',
                'verbose_name_plural': '监控对象实例组织',
            },
        ),
        migrations.AddField(
            model_name='monitorinstance',
            name='monitor_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='监控对象'),
        ),
        migrations.CreateModel(
            name='MonitorEventRawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=dict, verbose_name='原始数据')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorevent', verbose_name='事件')),
            ],
        ),
        migrations.AddIndex(
            model_name='monitorevent',
            index=models.Index(fields=['policy_id', 'monitor_instance_id', 'created_at'], name='monitor_mon_policy__62dd7f_idx'),
        ),
        migrations.AddField(
            model_name='monitoralertmetricsnapshot',
            name='alert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitoralert', verbose_name='关联告警'),
        ),
        migrations.AddField(
            model_name='monitoralertmetricsnapshot',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorevent', verbose_name='关联事件'),
        ),
        migrations.AddField(
            model_name='metricgroup',
            name='monitor_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='指标对象'),
        ),
        migrations.AddField(
            model_name='metricgroup',
            name='monitor_plugin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorplugin', verbose_name='监控插件'),
        ),
        migrations.AddField(
            model_name='metric',
            name='metric_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.metricgroup', verbose_name='指标分组'),
        ),
        migrations.AddField(
            model_name='metric',
            name='monitor_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorobject', verbose_name='指标对象'),
        ),
        migrations.AddField(
            model_name='metric',
            name='monitor_plugin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorplugin', verbose_name='监控插件'),
        ),
        migrations.AddField(
            model_name='collectconfig',
            name='monitor_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.monitorinstance', verbose_name='监控对象实例'),
        ),
        migrations.AlterUniqueTogether(
            name='policytemplate',
            unique_together={('monitor_object', 'plugin')},
        ),
        migrations.AlterUniqueTogether(
            name='policyorganization',
            unique_together={('policy', 'organization')},
        ),
        migrations.AlterUniqueTogether(
            name='monitorinstanceorganization',
            unique_together={('monitor_instance', 'organization')},
        ),
        migrations.AddIndex(
            model_name='monitoralertmetricsnapshot',
            index=models.Index(fields=['alert', 'snapshot_time'], name='monitor_mon_alert_i_117b30_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metricgroup',
            unique_together={('monitor_object', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='metric',
            unique_together={('monitor_object', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='collectconfig',
            unique_together={('monitor_instance', 'collector', 'collect_type', 'config_type')},
        ),
    ]
