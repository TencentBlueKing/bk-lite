{
  "plugin": "MSSQL-Exporter",
  "plugin_desc": "The MSSQL collection plugin monitors Microsoft SQL Server instances, tracking status, version information, uptime, and high availability configuration.",
  "name": "MSSQL",
  "icon": "MsSql",
  "type": "Database",
  "description": "",
  "metrics": [
    {
      "metric_group": "Base",
      "name": "up",
      "query": "up_gauge{__$labels__,instance_type=\"mssql\"}",
      "display_name": "Monitor the running status of the plug-in",
      "instance_id_keys": ["instance_id"],
      "data_type": "Enum",
      "unit": "[{\"id\":1,\"name\":\"Normal\",\"color\":\"#52c41a\"},{\"id\":0,\"name\":\"Abnormal\",\"color\":\"#ff4d4f\"}]",
      "dimensions": [],
      "description": "The running status of the MSSQL monitoring plug-in."
    },
    {
      "metric_group": "Base",
      "name": "mssql_version",
      "query": "mssql_version_gauge{__$labels__}",
      "display_name": "Mssql version number",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "",
      "dimensions": [
        {"name":"ProductVersion", "description":"The specific version number of the currently running SQL Server"}
      ],
      "description": "This metric allows quick confirmation of the database version, which is crucial for compatibility verification, patch update planning, and troubleshooting."
    },
    {
      "metric_group": "Base",
      "name": "mssql_instance_uptime",
      "query": "mssql_instance_uptime_gauge{__$labels__}",
      "display_name": "MSSQL Run Time",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "The time (in seconds) that the MSSQL database has been run since the last restart."
    },
    {
      "metric_group": "Base",
      "name": "mssql_database_state",
      "query": "mssql_database_state_gauge{__$labels__}",
      "display_name": "MSSQL database status",
      "instance_id_keys": ["instance_id"],
      "data_type": "Enum",
      "unit": "[{\"id\":0,\"name\":\"ONLINE\",\"color\":\"#52c41a\"},{\"id\":1,\"name\":\"RESTORING\",\"color\":\"#faad14\"},{\"id\":2,\"name\":\"RECOVERING\",\"color\":\"#faad14\"},{\"id\":3,\"name\":\"RECOVERY_PENDING\",\"color\":\"#ffa940\"},{\"id\":4,\"name\":\"SUSPECT\",\"color\":\"#ff4d4f\"},{\"id\":5,\"name\":\"EMERGENCY\",\"color\":\"#ff4d4f\"},{\"id\":6,\"name\":\"OFFLINE\",\"color\":\"#ff4d4f\"},{\"id\":7,\"name\":\"COPYING\",\"color\":\"#ffa940\"},{\"id\":10,\"name\":\"OFFLINE_SECONDARY\",\"color\":\"#ffa940\"}]",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "Database status codes: 0=ONLINE (normal), 1=RESTORING, 2=RECOVERING, 3=RECOVERY_PENDING, 4=SUSPECT (integrity issue), 5=EMERGENCY, 6=OFFLINE, 7=COPYING, 10=OFFLINE_SECONDARY (AlwaysOn replica)."
    },
    {
      "metric_group": "Base",
      "name": "mssql_local_time_seconds",
      "query": "mssql_local_time_seconds_gauge{__$labels__}",
      "display_name": "MSSQL local time",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "The local timestamp of the host where the MSSQL server resides."
    },
    {
      "metric_group": "Base",
      "name": "mssql_always_on_status",
      "query": "mssql_always_on_status_gauge{__$labels__}",
      "display_name": "Mssql AlwaysOn High Availability Group Status",
      "instance_id_keys": ["instance_id"],
      "data_type": "Enum",
      "unit": "[{\"id\":1,\"name\":\"Enabled\",\"color\":\"#52c41a\"},{\"id\":0,\"name\":\"Disabled\",\"color\":\"#ff4d4f\"}]",
      "dimensions": [],
      "description": "Indicates whether AlwaysOn High Availability group is enabled (1) or disabled (0) on the MSSQL database server."
    },
    {
      "metric_group": "System",
      "name": "mssql_total_page_file_bytes",
      "query": "mssql_total_page_file_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The total number of bytes of MSSQL page files",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "Represents the total page file size currently used by the system, including the allocated page file size and the unallocated page file size. The numeric value of this metric reflects the memory usage of the SQL Server system while it is running, and the total number of page file sizes in the operating system."
    },
    {
      "metric_group": "System",
      "name": "mssql_available_page_file_bytes",
      "query": "mssql_available_page_file_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The number of bytes of the page file available for Mssql",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "Represents the page file size that is currently available to the system, that is, the page file size that has not yet been allocated. The numerical value of this metric can reflect how much memory is left in the system to use."
    },
    {
      "metric_group": "System",
      "name": "mssql_available_physical_memory_bytes",
      "query": "mssql_available_physical_memory_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The number of bytes of physical memory available for MSSQL",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "The amount of physical memory currently available on the MSSQL server."
    },
    {
      "metric_group": "System",
      "name": "mssql_os_memory",
      "query": "mssql_os_memory_gauge{__$labels__}/1024/1024",
      "display_name": "MSSQL operating system memory",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [
        {
          "name": "state",
          "description": "Memory state: used=amount of memory currently in use, available=amount of unused memory"
        }
      ],
      "description": "The total amount of memory currently being used by the operating system on the MSSQL server. The indicator has the following two statuses: used: indicates the amount of memory (in bytes) that is currently in use. unused: indicates the amount of unused memory, in bytes."
    },
    {
      "metric_group": "System",
      "name": "mssql_total_physical_memory_bytes",
      "query": "mssql_total_physical_memory_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The total number of bytes of MSSQL physical memory",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "The total amount of physical memory available on the MSSQL server."
    },
    {
      "metric_group": "System",
      "name": "mssql_memory_utilization_percentage",
      "query": "mssql_memory_utilization_percentage_gauge{__$labels__}",
      "display_name": "MSSQL memory utilization",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "percent",
      "dimensions": [],
      "description": "The percentage of the amount of memory being used on the MSSQL server out of the total amount of memory available. This metric reflects the usage and utilization of MSSQL server memory. SQL Server is designed to use memory as efficiently as possible, so even if you set a maximum memory, you may still see it consume memory that is close to or at the maximum memory limit. If you often see 100% memory usage, it may be because SQL Server is actively caching data and query plans to improve performance."
    },
    {
      "metric_group": "System",
      "name": "mssql_virtual_memory_bytes",
      "query": "mssql_virtual_memory_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The number of bytes of MSSQL virtual memory",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "The total amount of virtual memory currently in use on the MSSQL server. Virtual memory includes both physical memory and swap files on the hard disk. When the physical memory is insufficient, the system releases a portion of the data into a swap file. This metric can reflect the usage and demand of the MSSQL server for virtual memory."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_batch_requests",
      "query": "mssql_batch_requests_counter{__$labels__}",
      "display_name": "MSSQL batch requests",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The total number of batch requests received on the MSSQL server. Batch processing is a technology that executes multiple SQL statements in a single database connection, which can effectively reduce the number of database connections and improve system performance. This metric can reflect the database access and workload of the MSSQL server."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_batch_requests_increase_5min",
      "query": "increase(mssql_batch_requests_counter{__$labels__}[5m])",
      "display_name": "Mssql bulk requests that grow every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By calculating the increment of batch requests within a 5-minute time window, this metric helps administrators understand the changing trend of the database's query load."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_processes_blocked",
      "query": "mssql_processes_blocked_counter{__$labels__}",
      "display_name": "The number of MSSQL process blockages",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "Indicates the number of processes that are currently blocking waiting for resources. When a process wait is blocked, it stops and waits for the required resources (e.g., locks, I/O, memory, etc.), which can lead to slower system response times or performance issues."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_processes_blocked_increase_5min",
      "query": "increase(mssql_processes_blocked_counter{__$labels__}[5m])",
      "display_name": "The number of process blocks that grow every 5 minutes in MSSQL",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of blocked processes within a 5-minute time window, this metric helps database administrators identify whether there is a trend of increasing blocking in the short term."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_buffer_cache_hit_ratio",
      "query": "mssql_buffer_cache_hit_ratio_gauge{__$labels__}",
      "display_name": "MSSQL buffer cache hit ratio",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "percent",
      "dimensions": [],
      "description": "MSSQL Server Buffer Cache Hit Ratio. A buffer cache is an area of memory that is used to store frequently used pages of data. When the MSSQL server needs to access the data pages in the database, it will first check the buffer cache, and if the data pages already exist in the buffer cache, they can be accessed directly, which can significantly improve the data access speed. The buffer cache hit ratio is the proportion of data pages that are already in the buffer cache out of all buffer cache accesses."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_checkpoint_pages_sec",
      "query": "mssql_checkpoint_pages_sec_counter{__$labels__}",
      "display_name": "MSSQL checkpoint writes to pages",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of checkpoint pages written to disk (cumulative), which measures the speed at which the database on the server is written to disk."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_checkpoint_pages_increase_5min",
      "query": "increase(mssql_checkpoint_pages_sec_counter{__$labels__}[5m])",
      "display_name": "Mssql checkpoints write pages every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "This is a metric for monitoring Microsoft SQL Server databases, which reflects the increase in the number of pages written by checkpoints in the past 5 minutes."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_io_stall_seconds",
      "query": "mssql_io_stall_seconds_counter{__$labels__}",
      "display_name": "Mssql I/O pause time",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "operation", "description": "I/O operation type"}
      ],
      "description": "The time when I/O operations are paused, indicates the time that the system waits for I/O operations to complete"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_io_stall_increase_5min",
      "query": "increase(mssql_io_stall_seconds_counter{__$labels__}[5m])",
      "display_name": "Mssql increases I/O pause time every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "operation", "description": "I/O operation type"}
      ],
      "description": "By counting the increment of I/O stall time within a 5-minute window, this metric helps identify potential performance bottlenecks in the disk I/O subsystem"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_io_stall_total_seconds",
      "query": "mssql_io_stall_total_seconds_counter{__$labels__}",
      "display_name": "MsSQL total I/O pause time",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "The total amount of time that all I/O operations were paused"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_io_stall_total_increase_5min",
      "query": "increase(mssql_io_stall_total_seconds_counter{__$labels__}[5m])",
      "display_name": "Mssql total I/O pause time every 5 minutes of growth",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "By counting the increment of total I/O stall time within a 5-minute window, this metric comprehensively reflects the performance status of the storage subsystem"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_lazy_write_sec",
      "query": "mssql_lazy_write_sec_counter{__$labels__}",
      "display_name": "MSSQL delays write time",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "The amount of time (in seconds) that is delayed to disk in a SQL Server instance represents the amount of time that data in the buffer pool is waiting to be written to disk."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_lazy_write_increase_5min",
      "query": "increase(mssql_lazy_write_sec_counter{__$labels__}[5m])",
      "display_name": "MSSQL Delayed write time grows every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "By counting the increment of pages processed by lazy writes within a 5-minute window, this metric helps administrators evaluate memory pressure and disk I/O load"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_fault_count",
      "query": "mssql_page_fault_count_counter{__$labels__}",
      "display_name": "MSSQL Page Failures",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "Page failures are the number of data pages that the operating system reads from disk, that is, the number of times that the desired data page is not found in the cache and needs to be read from disk. Page faults are often caused by insufficient data in the buffer pool, which can lead to degraded performance and increased disk I/O load."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_fault_increase_5min",
      "query": "increase(mssql_page_fault_count_counter{__$labels__}[5m])",
      "display_name": "Mssql grows the number of page errors every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of page faults within a 5-minute window, this metric helps administrators determine whether the system memory is sufficient and the frequency of interaction between memory and disk"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_life_expectancy",
      "query": "mssql_page_life_expectancy_gauge{__$labels__}",
      "display_name": "MSSQL page life expectancy",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "The page lifetime expectation is the average amount of time (seconds) that a data page is retained in the buffer pool, which is calculated based on the current buffer pool usage and configuration parameters. The longer the page life expectancy, the more efficiently the data pages in the buffer pool are being used, which reduces access to disk and improves SQL Server performance."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_reads_sec",
      "query": "mssql_page_reads_sec_counter{__$labels__}",
      "display_name": "Number of MSSQL page reads",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of pages of data read from disk to the buffer pool (cumulative) reflects the frequency and efficiency of disk I/O operations, with a higher before-and-after difference indicating more frequent disk read operations."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_reads_increase_5min",
      "query": "increase(mssql_page_reads_sec_counter{__$labels__}[5m])",
      "display_name": "Mssql page reads grow every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of page reads within a 5-minute window, this metric helps administrators understand the disk read load of the database and the efficiency of memory caching"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_write_sec",
      "query": "mssql_page_write_sec_counter{__$labels__}",
      "display_name": "The number of MSSQL page writes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of data pages written from the buffer pool to disk (cumulative) reflects the frequency and efficiency of disk I/O operations, with a higher difference indicating more frequent disk write operations."
    },
    {
      "metric_group": "Performance",
      "name": "mssql_page_write_increase_5min",
      "query": "increase(mssql_page_write_sec_counter{__$labels__}[5m])",
      "display_name": "Mssql page writes grow every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of page writes within a 5-minute window, this metric helps administrators understand the disk write load of the database and the intensity of transaction processing"
    },
    {
      "metric_group": "Performance",
      "name": "mssql_resident_memory_bytes",
      "query": "mssql_resident_memory_bytes_gauge{__$labels__}/1024/1024",
      "display_name": "The number of bytes in MSSQL resident memory",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [],
      "description": "The amount of physical memory currently used by the SQL Server instance, including data caches, execution plan caches, stored procedure caches, connection pools, and so on. The change in this metric reflects the memory usage of the SQL Server instance."
    },
    {
      "metric_group": "Connection",
      "name": "mssql_client_connections",
      "query": "mssql_client_connections_gauge{__$labels__}",
      "display_name": "The number of MSSQL client connections",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "host", "description": "Client host address"}
      ],
      "description": "The number of clients currently connected to the database. If this metric exceeds the preset alarm threshold, database performance may deteriorate or other problems may occur, which need to be troubleshot and handled in a timely manner."
    },
    {
      "metric_group": "Connection",
      "name": "mssql_connections",
      "query": "mssql_connections_gauge{__$labels__}",
      "display_name": "Number of MSSQL connections",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "The total number of connections to the MSSQL database, including the number of connections currently in use and the number of idle connections. This metric can be used to monitor the usage of the database connection pool and the resource usage of the database connection."
    },
    {
      "metric_group": "Transactions",
      "name": "mssql_deadlocks",
      "query": "mssql_deadlocks_counter{__$labels__}",
      "display_name": "MSSQL deadlocks",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of deadlocks (cumulative value) that occurs in MSSQL databases, which refers to the state in which multiple processes or threads request mutually exclusive resources at the same time and wait for each other, resulting in the process or thread being unable to continue executing."
    },
    {
      "metric_group": "Transactions",
      "name": "mssql_deadlocks_increase_5min",
      "query": "increase(mssql_deadlocks_counter{__$labels__}[5m])",
      "display_name": "Mssql Deadlocks grow every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of deadlock occurrences within a 5-minute window, this metric helps administrators understand the concurrent control status of the database"
    },
    {
      "metric_group": "Transactions",
      "name": "mssql_transactions",
      "query": "mssql_transactions_gauge{__$labels__}",
      "display_name": "Number of MSSQL transactions",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "The number of transactions initiated against the database (cumulative). Transactions/sec does not include XTP transactions that are initiated only by locally compiled stored procedures."
    },
    {
      "metric_group": "Transactions",
      "name": "mssql_transactions_increase_5min",
      "query": "increase(mssql_transactions_gauge{__$labels__}[5m])",
      "display_name": "Mssql transactions grow every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "By counting the increment of the number of transactions within a 5-minute window, this metric helps administrators understand the business load intensity and transaction activity of the database"
    },
    {
      "metric_group": "Error",
      "name": "mssql_kill_connection_errors",
      "query": "mssql_kill_connection_errors_counter{__$labels__}",
      "display_name": "MSSQL Terminate Connection Errors",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of errors (cumulative) on Microsoft SQL Server due to termination of connections. When a server terminates a connection, various errors can occur, such as connection timeouts, connection resets, and so on."
    },
    {
      "metric_group": "Error",
      "name": "mssql_kill_connection_errors_increase_5min",
      "query": "increase(mssql_kill_connection_errors_counter{__$labels__}[5m])",
      "display_name": "The number of terminated connection errors that grow every 5 minutes in MSSQL",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By counting the increment of connection termination errors within a 5-minute window, this metric helps identify potential connection stability issues or excessive resource usage leading to forced disconnections."
    },
    {
      "metric_group": "Error",
      "name": "mssql_user_errors",
      "query": "mssql_user_errors_counter{__$labels__}",
      "display_name": "Number of MSSQL user errors",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "The number of user errors that occurred (cumulative). These errors typically result from invalid queries, permission issues, or other user-initiated operations that violate database rules."
    },
    {
      "metric_group": "Error",
      "name": "mssql_user_errors_increase_5min",
      "query": "increase(mssql_user_errors_counter{__$labels__}[5m])",
      "display_name": "The number of user errors that grow every 5 minutes in MSSQL",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [],
      "description": "By tracking the rate of user error occurrences, this metric helps identify problematic application patterns or potential security issues through repeated failed operations."
    },
    {
      "metric_group": "Storage",
      "name": "mssql_database_filesize",
      "query": "mssql_database_filesize_gauge{__$labels__}/1024/1024",
      "display_name": "MSSQL database file size",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "logical_name", "description": "Logical file name"},
        {"name": "physical_name", "description": "Physical file path"},
        {"name": "type", "description": "File type (0=rows, 1=Log)"}
      ],
      "description": "The size of the Microsoft SQL Server database file, including the primary data file (.mdf) and the additional data file (.ndf). It reflects the amount of disk space occupied by the database."
    },
    {
      "metric_group": "Storage",
      "name": "mssql_db_file_used_ratio",
      "query": "mssql_db_file_used_ratio_gauge{__$labels__}",
      "display_name": "MSSQL database file usage",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "percent",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "file_name", "description": "Database file name"}
      ],
      "description": "This metric represents the utilization of database files in percentages. It is used to measure the disk space usage of database files. When database file usage exceeds a certain threshold, it can negatively impact the performance and stability of the database."
    },
    {
      "metric_group": "Storage",
      "name": "mssql_db_log_file_size",
      "query": "mssql_db_log_file_size_gauge{__$labels__}/1024/1024",
      "display_name": "MSSQL database log file size",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "mebibytes",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "file_name", "description": "Log file name"}
      ],
      "description": "The log file size of the database, in bytes. The log file records the transactional operations that occurred in the database."
    },
    {
      "metric_group": "Storage",
      "name": "mssql_last_backup_duration",
      "query": "mssql_last_backup_duration_gauge{__$labels__}*24",
      "display_name": "The time since the last backup of the MSSQL database",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "h",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "Monitor the time since the last backup of the database, which reflects the backup status of the database. If the time difference is -1, the database is not backed up and you should take backup measures immediately"
    },
    {
      "metric_group": "Storage",
      "name": "mssql_db_log_file_used_ratio",
      "query": "mssql_db_log_file_used_ratio_gauge{__$labels__}",
      "display_name": "MSSQL database log file usage",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "percent",
      "dimensions": [
        {"name": "db", "description": "Database name"},
        {"name": "file_name", "description": "Log file name"}
      ],
      "description": "The proportion of space used by database log files to the total space. High usage may indicate excessive transaction activity or infrequent log backups."
    },
    {
      "metric_group": "Log",
      "name": "mssql_log_growths",
      "query": "mssql_log_growths_counter{__$labels__}",
      "display_name": "The number of MSSQL logs growing",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "The number of times the database transaction log file has grown. Each growth means that the database system needs to increase the size of the transaction log file to store more transaction log information. This can impact system performance and increase storage costs."
    },
    {
      "metric_group": "Log",
      "name": "mssql_log_growths_increase_5min",
      "query": "increase(mssql_log_growths_counter{__$labels__}[5m])",
      "display_name": "Mssql log growth every 5 minutes",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "short",
      "dimensions": [
        {"name": "db", "description": "Database name"}
      ],
      "description": "Frequent log growth events within short time periods may indicate improperly sized transaction logs or unusually heavy transaction activity that requires investigation."
    },
    {
      "metric_group": "selfMonitor",
      "name": "scrape_duration_seconds",
      "query": "scrape_duration_seconds_gauge{__$labels__,instance_type=\"mssql\"}",
      "display_name": "Monitor the probe's last crawl duration",
      "instance_id_keys": ["instance_id"],
      "data_type": "Number",
      "unit": "s",
      "dimensions": [],
      "description": "Counts the time taken to crawl the data of the most recent instance, in seconds. Longer durations may indicate performance issues with the monitoring system or the SQL Server instance being monitored."
    }
  ]
}
